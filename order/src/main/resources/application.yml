server:
  port: 8080

---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: order
          destination: starcoffee
          contentType: application/json
        event-out:
          destination: starcoffee
          contentType: application/json
feign:
  hystrix:
    enabled: true

hystrix:
  command:
  default:
      execution.isolation.thread.timeoutInMilliseconds: 610         
#logging:
#  level:
#    org.hibernate.type: trace
#    org.springframework.cloud: debug
#server:
#  port: 8081
api:
  payment:
    url: http://localhost:8082
---

spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: order
          destination: starcoffee
          contentType: application/json
        event-out:
          destination: starcoffee
          contentType: application/json

#feign:
#  hystrix:
#    enabled: true

#hystrix:
#  command:
#    default:
#      execution.isolation.thread.timeoutInMilliseconds: 610
#      circuitBreaker:
#        requestVolumeThreshold: 20           # 설정수 값만큼 요청이 들어온 경우만 circut open 여부 결정 함
#        errorThresholdPercentage: 30        # requestVolumn값을 넘는 요청 중 설정 값이상 비율이 에러인 경우 circuit open
#        sleepWindowInMilliseconds: 5000    # 한번 오픈되면 얼마나 오픈할 것인지 
#      metrics:
#        rollingStats:
#          timeInMilliseconds: 10000       

api:
  payment:
    url: http://payment:8080
    #url: http://localhost:8082
         